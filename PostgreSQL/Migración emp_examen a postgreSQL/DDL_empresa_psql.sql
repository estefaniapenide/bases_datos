

DROP TABLE IF EXISTS sedes CASCADE;
CREATE TABLE sedes (
	id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    superficie SMALLINT NOT NULL CHECK (superficie>=0),
    direccion VARCHAR(255) NOT NULL,
    localidad VARCHAR(255) NOT NULL,
    telefono BIGINT NOT NULL,
    telefono2 BIGINT,
    provincia VARCHAR(30) NOT NULL
);
COMMENT ON COLUMN sedes.provincia IS 
'Podría ser un enum o una tabla, según las circunstancias';


DROP TABLE IF EXISTS departamentos CASCADE;
CREATE TABLE departamentos (
	num SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL UNIQUE,
    fcreacion DATE NOT NULL DEFAULT CURRENT_DATE,
    prima DECIMAL(7,2) NOT NULL,
    director SMALLINT UNIQUE, -- El índice UNIQUE permite garantizar una relación 1:1
    CHECK (fcreacion>'1970-01-01'),
    CHECK (prima>=0)
);

DROP TYPE IF EXISTS sexo CASCADE;
CREATE TYPE sexo AS ENUM ('HOMBRE', 'MUJER');

DROP TABLE IF EXISTS empleados CASCADE;
CREATE TABLE empleados (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	nif CHAR(9) NOT NULL UNIQUE,
    nombre VARCHAR(50) NOT NULL,
    apellidos VARCHAR(100) NOT NULL,
	nss BIGINT NOT NULL UNIQUE,
    salario DECIMAL(7,2) NOT NULL, /* https://stackoverflow.com/questions/15726535/postgresql-which-datatype-should-be-used-for-currency */
    sexo sexo,
    fnacimiento DATE NOT NULL,
    departamento SMALLINT NOT NULL,
    sede SMALLINT NOT NULL,
    supervisor INT,
    CHECK(salario>0)
);


DROP TABLE IF EXISTS proyectos CASCADE;
CREATE TABLE proyectos (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(80) NOT NULL,
    fecha_inicio DATE NOT NULL DEFAULT CURRENT_DATE,
    fecha_fin DATE,
    dept_coord SMALLINT NOT NULL,
    CHECK (fecha_fin>fecha_inicio)
);

DROP TABLE IF EXISTS proyectos_empleados;
CREATE TABLE proyectos_empleados (
	proyecto INT,
	empleado SMALLINT,
	horas INTERVAL NOT NULL DEFAULT '40h',
	fincorporacion DATE NOT NULL DEFAULT CURRENT_DATE,
	fbaja DATE,
	PRIMARY KEY (proyecto, empleado),
    CHECK (fincorporacion<fbaja),
    CHECK (horas<='40 hours'),
    CHECK (EXTRACT(seconds from horas)=0)
);

DROP TABLE IF EXISTS familiares CASCADE;
CREATE TABLE familiares (
	id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	nif CHAR(9) NOT NULL UNIQUE,
    nombre VARCHAR(255) NOT NULL,
    apellidos VARCHAR(255) NOT NULL,
    sexo sexo,
    fnacimiento DATE NOT NULL
);

DROP TABLE IF EXISTS familiares_emp;
CREATE TABLE familiares_emp (
	empleado SMALLINT,
    familiar SMALLINT,
    parentesco VARCHAR(20) NOT NULL,
    PRIMARY KEY (empleado, familiar)
);


/* -------------------------------------------------------------------------------------------
----- CLAVES FORANEAS -----
------------------------------------------------------------------------------------------- */

ALTER TABLE departamentos ADD FOREIGN KEY (director) REFERENCES empleados(id);
ALTER TABLE empleados ADD FOREIGN KEY (sede) REFERENCES sedes(id);
ALTER TABLE empleados ADD FOREIGN KEY (departamento) REFERENCES departamentos(num);
ALTER TABLE empleados ADD FOREIGN KEY (supervisor) REFERENCES empleados(id)
	ON DELETE SET NULL;

ALTER TABLE proyectos ADD FOREIGN KEY (dept_coord) REFERENCES departamentos(num);
ALTER TABLE proyectos_empleados ADD FOREIGN KEY (proyecto) REFERENCES proyectos(id);
ALTER TABLE proyectos_empleados ADD FOREIGN KEY (empleado) REFERENCES empleados(id)
	ON DELETE CASCADE;
ALTER TABLE familiares_emp ADD FOREIGN KEY (familiar) REFERENCES familiares(id)
	ON DELETE CASCADE;
ALTER TABLE familiares_emp ADD FOREIGN KEY (empleado) REFERENCES empleados(id);

	